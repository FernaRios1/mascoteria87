openapi: 3.0.0
info:
  title: Marketplace API
  version: 3.0.0
  description: API para MascoteriaG87 con autenticación JWT

servers:
  - url: http://localhost:4000/api

paths:
  /auth/register:
    post:
      summary: Registro de usuario
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                nombre: { type: string }
                email: { type: string }
                password: { type: string }
              required: [nombre, email, password]
      responses:
        '200':
          description: Usuario registrado
          content:
            application/json:
              schema:
                type: object
                properties:
                  token: { type: string }

  /auth/login:
    post:
      summary: Login de usuario
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email: { type: string }
                password: { type: string }
              required: [email, password]
      responses:
        '200':
          description: Sesión iniciada
          content:
            application/json:
              schema:
                type: object
                properties:
                  token: { type: string }

  /me:
    get:
      summary: Obtener usuario autenticado
      security: [bearerAuth: []]
      responses:
        '200':
          description: Datos del usuario logeado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'

  /categorias:
    get:
      summary: Listar categorías
      responses:
        '200':
          description: Lista de categorías
          content:
            application/json:
              schema:
                type: array
                items: { $ref: '#/components/schemas/Category' }

  /categorias/{id}:
    get:
      summary: Obtener una categoría
      parameters:
        - in: path
          name: id
          required: true
          schema: { type: integer }
      responses:
        '200':
          description: Categoría encontrada
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Category'

  /publicaciones:
    get:
      summary: Listar publicaciones
      parameters:
        - in: query
          name: categoria_id
          schema: { type: integer }
      responses:
        '200':
          description: Lista de publicaciones
          content:
            application/json:
              schema:
                type: array
                items: { $ref: '#/components/schemas/Publication' }
    post:
      summary: Crear publicación
      security: [bearerAuth: []]
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                titulo: { type: string }
                descripcion: { type: string }
                precio: { type: number }
                stock: { type: integer }
                categoria_ids:
                  type: array
                  items: { type: integer }
                imagen: { type: string, format: binary }
      responses:
        '201':
          description: Publicación creada
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Publication'

  /publicaciones/{id}:
    get:
      summary: Obtener publicación
      parameters:
        - in: path
          name: id
          required: true
          schema: { type: integer }
      responses:
        '200':
          description: Publicación encontrada
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Publication'
    put:
      summary: Editar publicación
      security: [bearerAuth: []]
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                titulo: { type: string }
                descripcion: { type: string }
                precio: { type: number }
                stock: { type: integer }
                categoria_ids:
                  type: array
                  items: { type: integer }
                imagen: { type: string, format: binary }
      responses:
        '200':
          description: Publicación actualizada
    delete:
      summary: Eliminar publicación
      security: [bearerAuth: []]
      responses:
        '204':
          description: Eliminada

  /mis-publicaciones:
    get:
      summary: Listar publicaciones del usuario autenticado
      security: [bearerAuth: []]
      responses:
        '200':
          description: Publicaciones propias
          content:
            application/json:
              schema:
                type: array
                items: { $ref: '#/components/schemas/Publication' }

  /favoritos:
    get:
      summary: Listar favoritos del usuario
      security: [bearerAuth: []]
      responses:
        '200':
          description: Lista de favoritos
          content:
            application/json:
              schema:
                type: array
                items: { $ref: '#/components/schemas/Publication' }

  /favoritos/{pubId}:
    post:
      summary: Añadir a favoritos
      security: [bearerAuth: []]
      parameters:
        - in: path
          name: pubId
          required: true
          schema: { type: integer }
      responses:
        '201': { description: Añadido }
    delete:
      summary: Quitar de favoritos
      security: [bearerAuth: []]
      parameters:
        - in: path
          name: pubId
          required: true
          schema: { type: integer }
      responses:
        '204': { description: Eliminado }

  /publicaciones/{id}/comentarios:
    get:
      summary: Listar comentarios de una publicación
      responses:
        '200':
          description: Lista de comentarios
          content:
            application/json:
              schema:
                type: array
                items: { $ref: '#/components/schemas/Comment' }
    post:
      summary: Crear comentario
      security: [bearerAuth: []]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                texto: { type: string }
              required: [texto]
      responses:
        '201':
          description: Comentario creado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Comment'

  /comentarios/{id}:
    delete:
      summary: Eliminar comentario
      security: [bearerAuth: []]
      parameters:
        - in: path
          name: id
          required: true
          schema: { type: integer }
      responses:
        '204': { description: Eliminado }

  /compras:
    post:
      summary: Crear compra (checkout)
      security: [bearerAuth: []]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                items:
                  type: array
                  items:
                    type: object
                    properties:
                      publicacion_id: { type: integer }
                      cantidad: { type: integer }
                      precio_unitario: { type: number }
      responses:
        '201':
          description: Compra creada
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Compra'

components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT

  schemas:
    User:
      type: object
      properties:
        id: { type: integer }
        nombre: { type: string }
        email: { type: string }

    Category:
      type: object
      properties:
        id: { type: integer }
        nombre: { type: string }

    Publication:
      type: object
      properties:
        id: { type: integer }
        titulo: { type: string }
        descripcion: { type: string }
        precio: { type: number }
        stock: { type: integer }
        imagen_url: { type: string }
        categorias:
          type: array
          items: { $ref: '#/components/schemas/Category' }
        usuario:
          $ref: '#/components/schemas/User'

    Comment:
      type: object
      properties:
        id: { type: integer }
        texto: { type: string }
        fecha: { type: string, format: date-time }
        usuario_id: { type: integer }
        usuario:
          $ref: '#/components/schemas/User'

    Compra:
      type: object
      properties:
        id: { type: integer }
        usuario_id: { type: integer }
        total: { type: number }
        fecha: { type: string, format: date-time }
        items:
          type: array
          items:
            type: object
            properties:
              publicacion_id: { type: integer }
              cantidad: { type: integer }
              precio_unitario: { type: number }
